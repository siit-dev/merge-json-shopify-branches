name: Merge Shopify JSON files from 2 branches

description: 'Merge Shopify JSON files from 2 branches'

author: 'SmartImpact IT'

inputs:
  json-paths:
    required: false
    description: 'JSON paths to merge'
    default: 'config/*.json,locales/*.json,templates/**/*.json'
  main-branch:
    required: false
    description: 'Main branch'
    default: 'main'
  production-branch:
    required: false
    description: 'Production branch'
    default: 'production'
  live-mirror-branch:
    required: false
    description: 'Live mirror branch'
    default: 'live-mirror'
  check-json-validity:
    required: false
    description: 'Check JSON validity'
    default: 'true'
  formatter-command:
    required: false
    description: 'Formatter command'
  commit-message:
    required: false
    description: 'Commit message'
    default: '[AUTOMATED] Update JSON files from `#liveMirror#` branch: #files#'
  preferred:
    required: false
    description: 'Preferred merge strategy'
    default: 'ours'
  exit-if-no-existing-deployment:
    required: false
    description: 'Exit if no existing deployment'
    default: 'true'
  run-locally-only:
    required: false
    description: 'Run locally only'
    default: 'true'
  config-git-user:
    required: false
    description: 'Configure git user'
    default: 'true'

outputs:
  hasConflict:
    description: 'Whether the merge process has conflicts'
    value: ${{ steps.merge-json.outputs.hasConflict }}
  hasErrors:
    description: 'Whether the merge process has errors'
    value: ${{ steps.merge-json.outputs.hasErrors }}
  error:
    description: 'The error message'
    value: ${{ steps.merge-json.outputs.error }}
  hasCommitted:
    description: 'Whether the merge process has committed'
    value: ${{ steps.merge-json.outputs.hasCommitted }}
  mergedFiles:
    description: 'The merged files'
    value: ${{ steps.merge-json.outputs.mergedFiles }}
  log:
    description: 'The output of the merge process'
    value: ${{ steps.merge-json.outputs.log }}

runs:
  using: 'composite'
  steps:
    - uses: ruby/setup-ruby@v1
      if: ${{ inputs.check-json-validity == 'true' == 'false' }}
      with:
        ruby-version: 3.2
        bundler: 'latest'

    - name: Install Ruby dependencies
      shell: bash
      if: ${{ inputs.check-json-validity == 'true' == 'false' }}
      run: |
        gem install theme-check

    - name: Install Shopify CLI
      shell: bash
      if: ${{ inputs.check-json-validity == 'true' == 'false' }}
      run: npm install -g @shopify/cli @shopify/theme

    - name: Print out the current directory
      shell: bash
      env:
        GITHUB_ACTION_PATH: ${{ github.action_path }}
      run: |
        pwd
        echo $GITHUB_ACTION_PATH

    - name: Setup git
      if: ${{ inputs.config-git-user == 'true' }}
      shell: bash
      run: |
        git config --local user.name github-actions
        git config --local user.email github-actions@github.com

    - name: Set up ENV variables
      shell: bash
      run: |
        pwd
        echo "INPUT_JSON-PATHS=${{ inputs.json-paths }}" >> "$GITHUB_OUTPUT"
        echo "INPUT_MAIN-BRANCH=${{ inputs.main-branch }}" >> "$GITHUB_OUTPUT"
        echo "INPUT_PRODUCTION-BRANCH=${{ inputs.production-branch }}" >> "$GITHUB_OUTPUT"
        echo "INPUT_LIVE-MIRROR-BRANCH=${{ inputs.live-mirror-branch }}" >> "$GITHUB_OUTPUT"
        echo "INPUT_CHECK-JSON-VALIDITY=${{ inputs.check-json-validity }}" >> "$GITHUB_OUTPUT"
        echo "INPUT_FORMATTER-COMMAND=${{ inputs.formatter-command }}" >> "$GITHUB_OUTPUT"
        echo "INPUT_COMMIT-MESSAGE=${{ inputs.commit-message }}" >> "$GITHUB_OUTPUT"
        echo "INPUT_PREFERRED=${{ inputs.preferred }}" >> "$GITHUB_OUTPUT"
        echo "INPUT_EXIT-IF-NO-EXISTING-DEPLOYMENT=${{ inputs.exit-if-no-existing-deployment }}" >> "$GITHUB_OUTPUT"
        echo "INPUT_RUN-LOCALLY-ONLY=${{ inputs.run-locally-only }}" >> "$GITHUB_OUTPUT"
        echo "INPUT_CONFIG-GIT-USER=${{ inputs.config-git-user }}" >> "$GITHUB_OUTPUT"
        echo "GITHUB_GIT_ROOT=${{ vars.GITHUB_PATH }}" >> "$GITHUB_OUTPUT"

    - name: Run the merge code
      id: merge-json
      working-directory: ${{ github.action_path }}
      shell: bash
      run: |
        pwd
        node dist/index.js

    - name: See the git status
      shell: bash
      run: |
        git status

    - name: Check JSON validity, if requested
      shell: bash
      if: ${{ steps.merge-json.outputs.hasCommitted == 'true' && inputs.check-json-validity == 'true' }}
      run: |
        git status | grep 'Your branch is ahead' && shopify theme check -c json

    - name: Push the changes, if there are any
      shell: bash
      if: steps.merge-json.outputs.hasCommitted == 'true'
      run: |
        git status | grep 'Your branch is ahead' && git push && echo 'Pushed changes' || echo "No changes to push"
